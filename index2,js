const express = require('express')
const path = require('path')
const fs = require('fs')
const app = express()
const port = 5000
const student = require("./students.js")
const e = require('express')
app.use(express.json())

app.get('/',(req,res) =>{
    res.sendFile(path.join(__dirname, "index.html"));
  })

app.get('/api/students',(req,res) =>{
    res.json(student);
  })

app.get('/hello/:name', (req, res) => {
    res.send('Hello World!' +  req.params.name)
  })

app.post('/api/students',(req,res)=>{
    if (!req.body.email){
        res.status(400)
        return res.json({error : "email is required"})
    }
    const user = {
        id: student.length + 1,
        first_name: req.body.first_name,
        last_name: req.body.last_name,
        email: req.body.email
    }
    student.push(user)
    res.json(user)
})

// Put is used to update data.

app.put('/api/students/:id',(req, res)=>{
    let id = req.params.id
    let first_name= req.body.first_name
    let last_name= req.body.last_name
    let email= req.body.email
    
    const index=student.findIndex((student)=>{
        return(student.id==Number.parseInt(id))
    })

    if(index>=0){
        let std= student[index]
        std.first_name=first_name
        std.last_name=last_name
        std.email=email
        res.json(std)
    } else{
        res.status(404)
    }
})

app.patch('/api/students/:id',(req,res)=>{
    let id = Number.parseInt(req.params.id)
    let studenttoUpdate = student.findIndex(student.id==id)
    let index = student.indexOf(studenttoUpdate)

    const updateStudentObject = Object.assign(studenttoUpdate,req.body);
    student[index]=studenttoUpdate;
    fs.writeFile("./student.js",JSON.stringify(student),(err)=>{
        res.status(200)
    })
})

app.delete('/api/students/delete/:id',(req,res)=>{
    let id = req.params.id
    const index=student.findIndex((student)=>{
        return(student.id==Number.parseInt(id))
    })

    if (index >= 0){
        let std = student[index]
        student.splice(index,1)
        res.json(std)
    }else{
        res.status(404)
    }
})


  app.listen(port, ()=>{
    console.log(`Listening on port ${port}`)
  });